local client_latency, client_set_clan_tag, client_log, client_draw_rectangle, client_draw_indicator, client_draw_circle_outline, client_timestamp, client_world_to_screen, client_userid_to_entindex = client.latency, client.set_clan_tag, client.log, client.draw_rectangle, client.draw_indicator, client.draw_circle_outline, client.timestamp, client.world_to_screen, client.userid_to_entindex 
local client_draw_circle, client_draw_gradient, client_set_event_callback, client_screen_size, client_trace_line, client_draw_text, client_color_log = client.draw_circle, client.draw_gradient, client.set_event_callback, client.screen_size, client.trace_line, client.draw_text, client.color_log 
local client_system_time, client_delay_call, client_visible, client_exec, client_open_panorama_context, client_set_cvar, client_eye_position = client.system_time, client.delay_call, client.visible, client.exec, client.open_panorama_context, client.set_cvar, client.eye_position 
local client_draw_hitboxes, client_get_cvar, client_draw_line, client_camera_angles, client_draw_debug_text, client_random_int, client_random_float = client.draw_hitboxes, client.get_cvar, client.draw_line, client.camera_angles, client.draw_debug_text, client.random_int, client.random_float 
local entity_get_local_player, entity_is_enemy, entity_is_dormant, entity_hitbox_position, entity_get_player_name, entity_get_steam64, entity_get_bounding_box, entity_get_all, entity_set_prop = entity.get_local_player, entity.is_enemy, entity.is_dormant, entity.hitbox_position, entity.get_player_name, entity.get_steam64, entity.get_bounding_box, entity.get_all, entity.set_prop 
local entity_is_alive, entity_get_player_weapon, entity_get_prop, entity_get_players, entity_get_classname = entity.is_alive, entity.get_player_weapon, entity.get_prop, entity.get_players, entity.get_classname 
local globals_realtime, globals_absoluteframetime, globals_tickcount, globals_curtime, globals_mapname, globals_tickinterval, globals_framecount, globals_frametime, globals_maxplayers = globals.realtime, globals.absoluteframetime, globals.tickcount, globals.curtime, globals.mapname, globals.tickinterval, globals.framecount, globals.frametime, globals.maxplayers 
local ui_new_slider, ui_new_combobox, ui_reference, ui_set_visible, ui_is_menu_open, ui_new_color_picker, ui_set_callback, ui_set = ui.new_slider, ui.new_combobox, ui.reference, ui.set_visible, ui.is_menu_open, ui.new_color_picker, ui.set_callback, ui.set 
local ui_new_checkbox, ui_new_hotkey, ui_new_button, ui_new_multiselect, ui_get = ui.new_checkbox, ui.new_hotkey, ui.new_button, ui.new_multiselect, ui.get 
local math_ceil, math_tan, math_cos, math_sinh, math_pi, math_max, math_atan2, math_floor, math_sqrt, math_deg, math_atan, math_fmod, math_acos = math.ceil, math.tan, math.cos, math.sinh, math.pi, math.max, math.atan2, math.floor, math.sqrt, math.deg, math.atan, math.fmod, math.acos 
local math_pow, math_abs, math_min, math_sin, math_log, math_exp, math_cosh, math_asin, math_rad = math.pow, math.abs, math.min, math.sin, math.log, math.exp, math.cosh, math.asin, math.rad 
local table_sort, table_remove, table_concat, table_insert = table.sort, table.remove, table.concat, table.insert 
local string_find, string_format, string_gsub, string_len, string_gmatch, string_match, string_reverse, string_upper, string_lower, string_sub = string.find, string.format, string.gsub, string.len, string.gmatch, string.match, string.reverse, string.upper, string.lower, string.sub 
local renderer_line, renderer_indicator, renderer_world_to_screen, renderer_circle_outline, renderer_rectangle, renderer_gradient, renderer_circle, renderer_text = renderer.line, renderer.indicator, renderer.world_to_screen, renderer.circle_outline, renderer.rectangle, renderer.gradient, renderer.circle, renderer.text 
local ui_epicdesync = ui.new_checkbox("AA", "Anti-aimbot angles", "Manual Desync")
local ui_indicator_color_picker = ui.new_color_picker("AA", "Anti-aimbot angles", "Indicator colour", "0", "115", "255", "255")
local ui_desync_hotkey = ui.new_hotkey("AA", "Anti-aimbot angles", "Left/Right Desync key")
local ui_desyncback_hotkey = ui.new_hotkey("AA", "Anti-aimbot angles", "Backward Desync key")
local ui_combobox_ind = ui.new_combobox("AA", "Anti-aimbot angles", "Indicator type", {"Arrows", "Custom"})
local ui_leftind_hotkey = ui.new_hotkey("AA", "Anti-aimbot angles", "Left Ind")
local ui_textbox_indleft = ui.new_textbox("AA", "Anti-aimbot angles", "Indicator")
local ui_rightind_hotkey = ui.new_hotkey("AA", "Anti-aimbot angles", "Right Ind")
local ui_textbox_indright = ui.new_textbox("AA", "Anti-aimbot angles", "Indicator")
local ui_backind_hotkey = ui.new_hotkey("AA", "Anti-aimbot angles", "Back Ind")
local ui_textbox_indback = ui.new_textbox("AA", "Anti-aimbot angles", "Indicator")
local aa_speed = ui.new_slider("AA", "Anti-aimbot angles", "Jitter Speed", 1, 10, 1)
local ui_mode = ui.new_slider("AA", "Anti-aimbot angles", "Mode", 1, 6, 1)
local client_log = client.log
local client_draw_text = client.draw_text
local client_screensize = client.screen_size
local client_set_event_callback = client.set_event_callback
local speed = 0
local reference_yaw, reference_yaw_slider = ui_reference("AA", "Anti-aimbot angles", "Yaw")
local reference_yaw_moving, reference_yaw_moving_slider = ui_reference("AA", "Anti-aimbot angles", "Yaw while running")
local reference_fake, reference_fake_slider = ui_reference("AA", "Anti-aimbot angles", "Fake yaw")
local reference_yaw_jitter_type, reference_yaw_jit_slider = ui_reference("AA", "Anti-aimbot angles", "Yaw jitter")
local isLeft, isRight, isBack = false
local delay_time = 0 
local onetap = 0

local function contains(tbl, val)
	for i=1,#tbl do
		if tbl[i] == val then 
			return true
		end
	end
	return false
end

local function get_antiaim_dir()

	if ui_get(ui_desync_hotkey) then
		isLeft = true
		isRight = false
		isBack = false
	
	else
		isLeft = false
		isRight = true
		isBack = false
	end

	if ui_get(ui_desyncback_hotkey) then
		isBack = true
		isLeft = false
		isRight = false
	end
end

local function setLeft()
    ui_set(reference_yaw, "180")
	if (ui_get(ui_mode) == 5) then
	ui_set(reference_fake, "Crooked")
	ui_set(reference_yaw_slider, -90)
	ui_set(reference_yaw_jit_slider, 0)
	elseif (ui_get(ui_mode) == 6) then
	ui_set(reference_fake, "Off")
	ui_set(reference_yaw_slider, -90)
	ui_set(reference_yaw_jit_slider, 0)
	else
	ui_set(reference_fake, "Crooked")
    ui_set(reference_yaw_slider, -45)
	ui_set(reference_yaw_jit_slider, -95)
	end
end

local function setRight()
    ui_set(reference_yaw, "180")
	if (ui_get(ui_mode) == 5) then
	ui_set(reference_fake, "Crooked")
	ui_set(reference_yaw_slider, 90)
	ui_set(reference_yaw_jit_slider, 0)
	elseif (ui_get(ui_mode) == 6) then
	ui_set(reference_fake, "Off")
	ui_set(reference_yaw_slider, 90)
	ui_set(reference_yaw_jit_slider, 0)
	else
	ui_set(reference_fake, "Crooked")
    ui_set(reference_yaw_slider, 45)
	ui_set(reference_yaw_jit_slider, 95)
	end
end

local function setLeft2()
    ui_set(reference_yaw, "180")
	if (ui_get(ui_mode) == 1) then 
    ui_set(reference_yaw_slider, -15)
	ui_set(reference_yaw_jit_slider, -65)
	elseif (ui_get(ui_mode) == 2) then
	ui_set(reference_yaw_slider, -45)
	ui_set(reference_yaw_jit_slider, -80)
	elseif (ui_get(ui_mode) == 3) then
	ui_set(reference_yaw_slider, -35)
	ui_set(reference_yaw_jit_slider, -80)
	end
end

local function setRight2()
   	if (ui_get(ui_mode) == 1) then 
    ui_set(reference_yaw_slider, 15)
	ui_set(reference_yaw_jit_slider, 65)
	elseif (ui_get(ui_mode) == 2) then
	ui_set(reference_yaw_slider, 45)
	ui_set(reference_yaw_jit_slider, 80)
	elseif (ui_get(ui_mode) == 3) then
	ui_set(reference_yaw_slider, 35)
	ui_set(reference_yaw_jit_slider, 80)
	end
end

local function setBack()
    ui_set(reference_yaw, "180")
	if (ui_get(ui_mode) == 1) then
	ui_set(reference_fake, "Crooked")
	ui_set(reference_yaw_slider, 30)
	ui_set(reference_yaw_jit_slider, -60)
	elseif (ui_get(ui_mode) == 6) then
	ui_set(reference_fake, "Off")
	ui_set(reference_yaw_slider, 0)
	ui_set(reference_yaw_jit_slider, 20)
	else
	ui_set(reference_fake, "Crooked")
    ui_set(reference_yaw_slider, 150)
	ui_set(reference_yaw_jit_slider, 0)
	end
end

local function setBack2()
    ui_set(reference_yaw, "180")
	if (ui_get(ui_mode) == 1) then
	ui_set(reference_fake, "Crooked")
	ui_set(reference_yaw_slider, 45)
	ui_set(reference_yaw_jit_slider, -90)
	elseif (ui_get(ui_mode) == 6) then
	ui_set(reference_fake, "Off")
	ui_set(reference_yaw_slider, 0)
	ui_set(reference_yaw_jit_slider, 20)
	else
	ui_set(reference_fake, "Crooked")
    ui_set(reference_yaw_slider, 160)
	ui_set(reference_yaw_jit_slider, 151)
	end
end

local function on_paint(c)
	local value = ui_get(ui_combobox_ind)

	if value == "Arrows" then
	 indicator_left, indicator_right, indicator_back = "<", ">", "Ë…"
	 ui.set_visible(ui_leftind_hotkey, false)
ui.set_visible(ui_textbox_indleft, false)
ui.set_visible(ui_rightind_hotkey, false)
ui.set_visible(ui_textbox_indright, false)
ui.set_visible(ui_backind_hotkey, false)
ui.set_visible(ui_textbox_indback, false)

	else
		local left, right, back = ui_get(ui_textbox_indleft), ui_get(ui_textbox_indright), ui_get(ui_textbox_indback)
		indicator_left, indicator_right, indicator_back = left, right, back
		ui.set_visible(ui_leftind_hotkey, true)
		ui.set_visible(ui_textbox_indleft, true)
		ui.set_visible(ui_rightind_hotkey, true)
		ui.set_visible(ui_textbox_indright, true)
		ui.set_visible(ui_backind_hotkey, true)
		ui.set_visible(ui_textbox_indback, true)

	end	


	if not ui_get(ui_epicdesync) then
	return
	end
	speed = speed + 1
	local speed_actual = ui_get(aa_speed) * 100
	local scrsize_x, scrsize_y = client_screensize()
	local center_x, center_y = scrsize_x / 2, scrsize_y / 2
	

	local indicator_r, indicator_g, indicator_b, indicator_a = ui_get(ui_indicator_color_picker)

	get_antiaim_dir()
	if (speed >= speed_actual * 2) then
	speed = 0
	end
	if (ui_get(ui_mode) >= 4) then
		client_draw_text(c, center_x + 45, center_y, 214, 229, 252, indicator_a, "c+", 0, indicator_right)
		client_draw_text(c, center_x - 45, center_y, 214, 229, 252, indicator_a, "c+", 0, indicator_left)
		client_draw_text(c, center_x, center_y + 45, 214, 229, 252, indicator_a, "c+", 0, indicator_back)
	
		
	end
	if isLeft then
		if (ui_get(ui_mode) >= 4) then
		client_draw_text(c, center_x - 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_left)
		setLeft()
		else
		if (speed >= speed_actual) then
		client_draw_text(c, center_x - 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_left)
		setLeft()
		else
		client_draw_text(c, center_x - 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_left)
		client_draw_text(c, center_x - 60, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_left)
		setLeft2()
		end
		end
	elseif isRight then
		if (ui_get(ui_mode) >= 4) then
		client_draw_text(c, center_x + 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_right)
		setRight()
		else
		if (speed >= speed_actual) then
		setRight()
		client_draw_text(c, center_x + 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_right)
		else
		setRight2()
		client_draw_text(c, center_x + 45, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_right)
		client_draw_text(c, center_x + 60, center_y, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_right)
		end
		end
	elseif isBack then
		if (ui_get(ui_mode) >= 4) then
		client_draw_text(c, center_x, center_y+45, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_back)
		setBack()
		else
		if (speed >= speed_actual) then
		setBack()
		client_draw_text(c, center_x, center_y+45, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_back)
		else
		setBack2()
		client_draw_text(c, center_x, center_y+45, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_back)
		client_draw_text(c, center_x, center_y+60, indicator_r, indicator_g, indicator_b, indicator_a, "c+", 0, indicator_back)
		end
		end	
	end 
end
client_set_event_callback("paint", on_paint)

local function time_to_ticks(time)
	return math_floor(time / globals_tickinterval() + .7)
end

local clan_tag_prev = ""
local enabled_prev = "Off"

local function gamesense_anim(text, indices)
	local text_anim = "               " .. text .. "                      " 
	local tickinterval = globals_tickinterval()
	local tickcount = globals_tickcount() + time_to_ticks(client_latency())
	local i = tickcount / time_to_ticks(0.35)
	i = math_floor(i % #indices)
	i = indices[i+1]+1

	return string_sub(text_anim, i, i+15)
end

local function run_tag_animation()
		--don't advertise other cheats using this or drone strike
		local clan_tag = gamesense_anim("brsync.lua", {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22})
		if clan_tag ~= clan_tag_prev then
			client_set_clan_tag(clan_tag)
		end
		clan_tag_prev = clan_tag
end

local function on_paint1(ctx)
		local local_player = entity_get_local_player()
		if local_player ~= nil and (not entity_is_alive(local_player)) and globals_tickcount() % 2 == 0 then --missing noclip check
			run_tag_animation()
		end
end
client.set_event_callback("paint", on_paint1)

local function on_run_command1(e)
		if e.chokedcommands == 0 then
			run_tag_animation()
		end
end
client.set_event_callback("run_command", on_run_command1) 
